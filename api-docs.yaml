openapi: 3.0.0
info:
  title: Padi POS API
  description: API Documentation for a Padi Point of Sale system.
  version: 1.0.0
servers:
  # - url: https://pos-api.ffathur.my.id/api/v1
  #   description: Production server
  - url: http://localhost:3000/api/v1
    description: Local Development server
components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: accessToken
      description: Access token stored in httpOnly cookieAuth

# security:
#   - cookieAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new cashier
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, email, password]
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  format: password
      responses:
        "201":
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Registrasi berhasil"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
                      role:
                        type: string

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  errors:
                    type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Registration failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /auth/login:
    post:
      summary: Login for admin and cashier
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [username, password]
              properties:
                username:
                  type: string
                  example: kasir
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        "200":
          description: Login successful, sets httpOnly cookies for tokens
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                  errors:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Login failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /auth/me:
    get:
      summary: Get current user information
      tags: [Auth]
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Current user information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
                      role:
                        type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /auth/refresh:
    get:
      summary: Refresh access token
      tags: [Auth]
      security:
        - cookieAuth: []
      responses:
        "200":
          description: New access token
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /auth/logout:
    delete:
      summary: Logout user
      tags: [Auth]
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /categories:
    get:
      summary: Get all categories
      tags: [Categories]
      responses:
        "200":
          description: List of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
    post:
      summary: Create a new category
      tags: [Categories]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
      responses:
        "201":
          description: Category created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "409":
          description: Category already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /categories/{id}:
    get:
      summary: Get a category by ID
      tags: [Categories]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Category ID
      responses:
        "200":
          description: Category details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
        "404":
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
    patch:
      summary: Update a category by ID
      tags: [Categories]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Category ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Category updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "409":
          description: Category already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "404":
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
    delete:
      summary: Delete a category by ID
      tags: [Categories]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Category ID
      responses:
        "200":
          description: Category deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "404":
          description: Category not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /products:
    get:
      summary: Get all products
      tags: [Products]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          required: false
          description: The page number to retrieve.
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
            minimum: 1
          required: false
          description: The number of items to retrieve per page.
      responses:
        "200":
          description: List of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        price:
                          type: string
                        image:
                          type: string | null
                        category:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                  meta:
                    type: object
                    properties:
                      totalItems:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 1
                      currentPage:
                        type: integer
                        example: 1
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
    post:
      summary: Create a new product
      tags: [Products]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: string
                categoryId:
                  type: integer
                image:
                  type: string
                  format: binary
                  description: Image Product file

      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      price:
                        type: string
                      image:
                        type: string
                      category:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /products/{id}:
    get:
      summary: Get a product by ID
      tags: [Products]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Product ID
      responses:
        "200":
          description: Product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      price:
                        type: string
                      image:
                        type: string | null
                      category:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
    patch:
      summary: Update a product by ID
      tags: [Products]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Product ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                price:
                  type: string
                categoryId:
                  type: integer
                image:
                  type: string
                  format: binary
                  description: Image Product file

      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      price:
                        type: string
                      image:
                        type: string | null
                      category:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
    delete:
      summary: Delete a product by ID
      tags: [Products]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Product ID
      responses:
        "200":
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /orders:
    get:
      summary: Get all orders
      tags: [Orders]
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            minimum: 1
          required: false
          description: The page number to retrieve.
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
            minimum: 1
          required: false
          description: The number of items to retrieve per page.
      responses:
        "200":
          description: List of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        customerName:
                          type: string
                          example: Luqman
                        orderType:
                          type: string
                        tableNumber:
                          type: string
                        subtotal:
                          type: string
                        taxAmount:
                          type: string
                        amountPaid:
                          type: string
                        paymentMethod:
                          type: string
                          example: cash
                        orderNumber:
                          type: string
                          example: ORD-20251013-0001
                        status:
                          type: string
                          example: paid
                        grandTotal:
                          type: string
                        cashierId:
                          type: integer
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                              orderId:
                                type: integer
                              productId:
                                type: integer
                              quantity:
                                type: integer
                              price:
                                type: string
                              notes:
                                type: string
                  meta:
                    type: object
                    properties:
                      totalItems:
                        type: integer
                        example: 10
                      totalPages:
                        type: integer
                        example: 1
                      currentPage:
                        type: integer
                        example: 1
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
    post:
      summary: Create a new order
      tags: [Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customerName:
                  type: string
                  example: Luqman
                orderType:
                  type: string
                  example: "take-away"
                tableNumber:
                  type: string
                amountPaid:
                  type: number,
                paymentMethod:
                  type: string
                  example: "cash"
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      productId:
                        type: integer
                        example: 1
                      quantity:
                        type: integer
                        example: 1
                      notes:
                        type: string
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      customerName:
                        type: string
                        example: Luqman
                      orderType:
                        type: string
                        example: "take-away"
                      tableNumber:
                        type: string
                      subtotal:
                        type: string
                      taxAmount:
                        type: string
                      amountPaid:
                        type: string
                      paymentMethod:
                        type: string
                        example: cash
                      orderNumber:
                        type: string
                        example: ORD-20251013-0001
                      status:
                        type: string
                        example: paid
                      grandTotal:
                        type: string
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            orderId:
                              type: integer
                            quantity:
                              type: integer
                            price:
                              type: string
                            notes:
                              type: string
                            product:
                              type: object
                              properties:
                                id:
                                  type: integer
                                name:
                                  type: string
                                price:
                                  type: string
                      cashier:
                        type: object
                        properties:
                          id:
                            type: integer
                          username:
                            type: string
                      change:
                        type: number
                      createdAt:
                        type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /orders/{id}:
    get:
      summary: Get an order by ID
      tags: [Orders]
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Order ID
      responses:
        "200":
          description: Order found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      customerName:
                        type: string
                        example: Luqman
                      orderType:
                        type: string
                      tableNumber:
                        type: string
                      subtotal:
                        type: string
                      taxAmount:
                        type: string
                      amountPaid:
                        type: string
                      paymentMethod:
                        type: string
                        example: cash
                      orderNumber:
                        type: string
                        example: ORD-20251013-0001
                      status:
                        type: string
                        example: paid
                      grandTotal:
                        type: string
                      cashierId:
                        type: integer
                      items:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            orderId:
                              type: integer
                            productId:
                              type: integer
                            quantity:
                              type: integer
                            price:
                              type: string
                            notes:
                              type: string
        "404":
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
  /sales-report:
    get:
      summary: Get sales report for the logged-in cashier
      tags: [Reports]
      parameters:
        - name: startDate
          in: query
          description: "Filter report from this date (format: YYYY-MM-DD)"
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: "Filter report until this date (format: YYYY-MM-DD)"
          required: false
          schema:
            type: string
            format: date
        - name: orderType
          in: query
          description: Filter by order type
          required: false
          schema:
            type: string
            enum: [dine-in, take-away]
        - name: categoryId
          in: query
          description: Filter by product category ID
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            default: 10
      responses:
        "200":
          description: Sales report generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      summary:
                        type: object
                        properties:
                          totalOrder:
                            type: number
                            example: 8
                          totalOmzet:
                            type: number
                            example: 1000000
                          allMenuSales:
                            type: number
                            example: 15
                          salesByCategory:
                            type: object
                            properties:
                              Foods:
                                type: number
                                example: 5
                              Beverages:
                                type: number
                                example: 5
                              Desserts:
                                type: number
                                example: 2
                      orders:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                orderNumber:
                                  type: string
                                  example: ORD-20251016-0003
                                orderDate:
                                  type: string
                                  format: date-time
                                orderType:
                                  type: string
                                  example: take-away
                                customerName:
                                  type: string
                                  example: Luqman
                                category:
                                  type: string
                                  example: Beverages, Foods
                                grandTotal:
                                  type: string
                                  example: 100000
                          currentPage:
                            type: integer
                            example: 1
                          totalPages:
                            type: integer
                            example: 1
                          totalItems:
                            type: integer
                            example: 6
        "401":
          description: Unauthorized, token is missing or invalid
  /settings:
    get:
      summary: Get settings for the logged-in cashier
      tags: [User Settings]
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Successfully retrieved your settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successfully retrieved your settings"
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      email:
                        type: string
                        format: email
                      image:
                        type: string
                        format: uri
                        nullable: true
                      # ... (properti data lainnya tetap sama)
                      settings:
                        type: object
                        properties:
                          language:
                            type: string
                            enum: [English, Indonesia]
                          preferenceMode:
                            type: string
                            enum: [light, dark]
                          fontSize:
                            type: integer
                          zoomDisplay:
                            type: integer
        "401":
          description: Unauthorized - Authentication token is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "404":
          description: User settings not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
    patch:
      summary: Update current user's settings
      tags: [User Settings]
      security:
        - cookieAuth: []
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: "Minimum 3, maximum 50 characters"
                email:
                  type: string
                  format: email
                language:
                  type: string
                  enum: [English, Indonesia]
                preferenceMode:
                  type: string
                  enum: [light, dark]
                fontSize:
                  type: integer
                  description: "Minimum 10, maximum 24"
                zoomDisplay:
                  type: integer
                  description: "Minimum 50, maximum 150"
                image:
                  type: string
                  format: binary
                  description: "User's profile picture file"
      responses:
        "200":
          description: Successfully updated your settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Successfully updated your settings"
                  data: # Response body sama dengan GET
                    type: object
                    properties:
                      id:
                        type: integer
                      username:
                        type: string
                      # ... (sisa properti data sama)
        "400":
          description: Bad request (e.g., validation error)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "401":
          description: Unauthorized - Authentication token is missing or invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
        "404":
          description: User or their settings not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
